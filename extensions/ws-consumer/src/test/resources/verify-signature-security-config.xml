<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:wsc="http://www.mulesoft.org/schema/mule/wsc"
      xmlns:tls="http://www.mulesoft.org/schema/mule/tls"
      xmlns:spring="http://www.springframework.org/schema/beans" xmlns:ws="http://www.mulesoft.org/schema/mule/wsc"
      xsi:schemaLocation="
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
               http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
               http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
               http://www.mulesoft.org/schema/mule/wsc http://www.mulesoft.org/schema/mule/wsc/current/mule-wsc.xsd
               http://www.mulesoft.org/schema/mule/tls http://www.mulesoft.org/schema/mule/tls/current/mule-tls.xsd
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd">

    <http:listener-config name="listenerConfig" host="localhost" port="${port}"/>

    <tls:context name="tlsContextValidCertificate">
        <tls:trust-store path="trustStore" password="mulepassword" type="jks"/>
    </tls:context>

    <tls:context name="tlsContextInvalidCertificate">
        <tls:trust-store path="trustStoreWithoutMuleServerCertificate" password="mulepassword" type="jks"/>
    </tls:context>

    <wsc:config name="configWithValidSignature">
        <wsc:ws-connection serviceAddress="http://localhost:${port}/services/TestWithSignature" wsdlLocation="Test.wsdl"
                           service="TestService" port="TestPort">
            <wsc:securities>
                <ws:verify-signature-security-strategy tlsContext="tlsContextValidCertificate"/>
            </wsc:securities>
        </wsc:ws-connection>
    </wsc:config>

    <wsc:config name="configWithInvalidSignature">
        <wsc:ws-connection serviceAddress="http://localhost:${port}/services/TestWithSignature" wsdlLocation="Test.wsdl"
                           service="TestService" port="TestPort">
            <wsc:securities>
                <ws:verify-signature-security-strategy tlsContext="tlsContextInvalidCertificate"/>
            </wsc:securities>
        </wsc:ws-connection>
    </wsc:config>

    <wsc:config name="configWithoutSignature">
        <wsc:ws-connection serviceAddress="http://localhost:${port}/services/TestWithoutSignature" wsdlLocation="Test.wsdl"
                           service="TestService" port="TestPort">
            <wsc:securities>
                <ws:verify-signature-security-strategy tlsContext="tlsContextValidCertificate"/>
            </wsc:securities>
        </wsc:ws-connection>
    </wsc:config>

    <wsc:config name="configWithInvalidSignatureDefaultCertificates">
        <wsc:ws-connection serviceAddress="http://localhost:${port}/services/TestWithSignature" wsdlLocation="Test.wsdl"
                           service="TestService" port="TestPort">
            <wsc:securities>
                <ws:verify-signature-security-strategy/>
            </wsc:securities>
        </wsc:ws-connection>
    </wsc:config>

    <flow name="responseWithValidSignature">
        <wsc:consume operation="echo" config-ref="configWithValidSignature"/>
    </flow>

    <flow name="responseWithInvalidSignature">
        <wsc:consume operation="echo" config-ref="configWithInvalidSignature"/>
    </flow>

    <flow name="responseWithoutSignature">
        <wsc:consume operation="echo" config-ref="configWithoutSignature"/>
    </flow>

    <flow name="responseWithInvalidSignatureDefaultCertificates">
        <wsc:consume operation="echo" config-ref="configWithInvalidSignatureDefaultCertificates"/>
    </flow>


    <flow name="serverWithSignature">
        <http:listener path="/services/TestWithSignature" config-ref="listenerConfig"/>
        <cxf:jaxws-service serviceClass="org.mule.extension.ws.consumer.TestService">
            <cxf:outInterceptors>
                <spring:bean class="org.apache.cxf.ws.security.wss4j.WSS4JOutInterceptor">
                    <spring:constructor-arg>
                        <spring:map>
                            <spring:entry key="action" value="Signature"/>
                            <spring:entry key="signatureUser" value="muleserver"/>
                            <spring:entry key="passwordCallbackClass"
                                          value="org.mule.runtime.module.ws.functional.VerifySignatureSecurityFunctionalTestCase$ServerPasswordCallback"/>
                            <spring:entry key="signaturePropRefId" value="serverOutSecurityProperties"/>
                            <spring:entry key="serverOutSecurityProperties">
                                <spring:props>
                                    <spring:prop key="org.apache.ws.security.crypto.provider">
                                        org.apache.ws.security.components.crypto.Merlin
                                    </spring:prop>
                                    <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.type">jks
                                    </spring:prop>
                                    <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.password">
                                        mulepassword
                                    </spring:prop>
                                    <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.private.password">
                                        mulepassword
                                    </spring:prop>
                                    <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.alias">muleserver
                                    </spring:prop>
                                    <spring:prop key="org.apache.ws.security.crypto.merlin.keystore.file">
                                        serverKeystore
                                    </spring:prop>
                                </spring:props>
                            </spring:entry>
                        </spring:map>
                    </spring:constructor-arg>
                </spring:bean>
            </cxf:outInterceptors>

        </cxf:jaxws-service>
        <component class="org.mule.extension.ws.consumer.TestService"/>
    </flow>

    <flow name="serverWithoutSignature">
        <http:listener path="/services/TestWithoutSignature" config-ref="listenerConfig"/>
        <cxf:jaxws-service serviceClass="org.mule.extension.ws.consumer.TestService"/>
        <component class="org.mule.extension.ws.consumer.TestService"/>
    </flow>

</mule>